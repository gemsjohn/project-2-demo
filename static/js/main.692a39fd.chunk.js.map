{"version":3,"sources":["../node_modules/@stacks/connect-ui/dist/esm lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","auth.js","components/handlebars/main.js","components/handlebars/partials/pets-card.js","components/handlebars/fetch.js","components/handlebars/partials/jobs-card.js","components/handlebars/partials/nav-block.js","components/handlebars/partials/modal/create-job.js","components/handlebars/dashboard.js","components/handlebars/homepage.js","components/handlebars/walker-dashboard.js","components/Signin.jsx","components/App.jsx","index.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","appConfig","AppConfig","userSession","UserSession","getUserData","loadUserData","template","Handlebars","compile","Main","dangerouslySetInnerHTML","__html","body","registerPartial","Petscard","owner_details","stxAddress","o_user_id","o_first_name","o_last_name","o_email","a","axios","get","res","i","data","length","JSON","stringify","first_name","last_name","email","localStorage","setItem","myFunction","o_id","getItem","walker_details","w_user_id","w_first_name","w_last_name","w_email","w_id","job_details","j_id","j_pay","j_check_in","j_walk","j_timeframe","j_location","j_completed","j_owner_id","j_walker_id","j_animal_id","j_pet_name","j_owner_first_name","j_owner_last_name","owner_id","console","log","pay","check_in","walk","timeframe","location","completed","walker_id","animal_id","pet","pet_name","owner","j_timefrime","isUserSignedIn","profile","mainnet","str_stxAddress","pullJobs","Jobscard","Navblock","CreateJob","Dashboard","Homepage","WalkerDash","Signin","className","href","type","onClick","showConnect","appDetails","name","icon","window","origin","redirectTo","onFinish","reload","Signout","shortenedStxAddress","substr","margin","color","fontWeight","signUserOut","App","state","userData","preventDefault","this","setState","isSignInPending","handlePendingSignIn","history","replaceState","document","title","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.692a39fd.chunk.js","sourcesContent":["var map = {\n\t\"./connect-modal.entry.js\": [\n\t\t474,\n\t\t4\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 429;\nmodule.exports = webpackAsyncContext;","// Primary dependencies\nimport { AppConfig, UserSession, showConnect } from '@stacks/connect';\nimport { Person } from '@stacks/profile';\n\nconst appConfig = new AppConfig(['store_write', 'publish_data']);\n\nexport const userSession = new UserSession({ appConfig });\n\n// Authentication modal displays (Hiro Web Wallet - Browser Extension)\nexport function authenticate() {\n  showConnect({\n    appDetails: {\n      name: 'Test',\n      icon: window.location.origin + './assets/puppy.png',\n    },\n    redirectTo: '/',\n    onFinish: () => {\n      window.location.reload();\n    },\n    userSession: userSession,\n  });\n}\n\n// Get user data\nexport function getUserData() {\n  return userSession.loadUserData();\n}\n\n// Identify the profile\nexport function getPerson() {\n  return new Person(getUserData().profile);\n}\n\n// Disconnect from the userSession\nexport function disconnect() {\n  userSession.signUserOut(window.location.origin);\n  \n}\n","// Primary dependencies\nimport React from \"react\";\nimport Handlebars from \"handlebars\";\n\n// Set up the Main HTML template\nconst template = Handlebars.compile(`\n    <!DOCTYPE html>\n    <html lang=\"en\">\n\n    <head>\n        <meta charset=\"UTF-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n        <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n        <link href=\"https://fonts.googleapis.com/css2?family=Lato:wght@300&family=Merriweather+Sans&family=Old+Standard+TT&display=swap\" rel=\"stylesheet\">\n        <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.5.2/animate.min.css\">\n        <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\" integrity=\"sha384-WskhaSGFgHYWDcbwN70/dfYBj47jz9qbsMId/iRN3ewGhXQFZCSftd1LZCfmhktB\" crossorigin=\"anonymous\">\n        <link rel=\"stylesheet\" href=\"/stylesheets/style.css\" type=\"text/css\"/>\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.22.1/moment.js\"></script>\n        <script src=\"https://code.jquery.com/jquery.js\"></script>\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js\" integrity=\"sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49\" crossorigin=\"anonymous\"></script>\n        <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js\" integrity=\"sha384-smHYKdLADwkXOn1EmN1qk/HfnUcbVRZyYmZ4qpPea6sjB/pTJ0euyQp0Mk8ck+5T\" crossorigin=\"anonymous\"></script>\n        <title>Scout</title>\n    </head>\n\n    <body>\n        {{{ body }}}\n    <script src=\"/assets/js/app.js\"></script>\n    </body>\n\n    </html>\n`);\n\n// Export the Main HTML using the template and the partials\nexport const Main = () => {\n    // Const data is not in use, it is just here as an example\n    const data = {\n        body: \"\"\n    };\n    return (\n        <div\n        dangerouslySetInnerHTML={{__html: template(data)}}\n      />\n    )\n}","// Primary dependencies\nimport React from \"react\";\nimport Handlebars from 'handlebars';\n\n// Set up the Pet Card template\nconst template = Handlebars.registerPartial(\n    'pets-card',\n    `<div class=\"card mr-4\" style=\"width: 18rem;\">\n        <div class=\"card-body\">\n            <h5 class=\"card-title\">{{ this.pet_name }}</h5>\n            <h6 class=\"card-subtitle mb-2 text-muted\">{{ this.pet_type }}</h6>\n            <p class=\"card-text\">{{ this.description }}</p>\n        </div>\n        <button class=\"btn btn-lg btn-success\" type=\"button\" data-toggle=\"modal\" data-target=\"#exampleModal\">New job</button>\n    </div>`\n);\n\n// Export the Pet Cards using the template\nexport const Petscard = () => {\n    return (\n        <div\n            dangerouslySetInnerHTML={{__html: template}}\n        />\n    )\n}","// Primary dependency\nimport axios from 'axios';\n\n// Export owner details: id, first_name, last_name, and email\nexport const owner_details = (stxAddress) => {\n    let o_user_id;\n    let o_first_name;\n    let o_last_name;\n    let o_email;\n\n    // Read data from the Heroku DB /ap/owners\n    async function myFunction() {\n        const res = await axios.get(`https://pacific-depths-79804.herokuapp.com/api/owners`);\n          //   const body = await res.json(); // NOTE TO SELF: could this be used?\n\n        // Loop through all of the data\n        for (let i = 0; i < res.data.length; i++) {\n\n            // If an owner_id matches the stxAddress that you attempted to log in with then store the OWNER data locally.\n            // This data was stored locally so that it could be pulled out of the async function.\n            if (JSON.stringify(res.data[i].id) === stxAddress) {\n                o_user_id = res.data[i].id;\n                o_first_name = res.data[i].first_name;\n                o_last_name = res.data[i].last_name;\n                o_email = res.data[i].email;\n                localStorage.setItem('o_user_id', o_user_id);\n                localStorage.setItem('o_first_name', o_first_name);\n                localStorage.setItem('o_last_name', o_last_name);\n                localStorage.setItem('o_email', o_email);\n            }\n        }\n    }\n    // [NEED]Catch error?\n\n    // Call the async function and grab the data\n    myFunction();\n    let o_local_user_id = localStorage.getItem('o_user_id');\n    let o_local_first_name = localStorage.getItem('o_first_name');\n    let o_local_last_name = localStorage.getItem('o_last_name');\n    let o_local_email = localStorage.getItem('o_email');\n\n    // Return the data\n    return {\n        o_id: o_local_user_id,\n        o_first_name: o_local_first_name,\n        o_last_name: o_local_last_name,\n        o_email: o_local_email,\n    }\n}\n\nexport const walker_details = (stxAddress) => {\n    let w_user_id;\n    let w_first_name;\n    let w_last_name;\n    let w_email;\n\n    async function myFunction() {\n        const res = await axios.get(`https://pacific-depths-79804.herokuapp.com/api/walkers`);\n        // Loop through the Walkers DB\n        for (let i = 0; i < res.data.length; i++) {\n            // If a walker_id matches the stxAddress then store that WALKER data locally\n            if (JSON.stringify(res.data[i].id) === stxAddress) {\n                w_user_id = res.data[i].id;\n                w_first_name = res.data[i].first_name;\n                w_last_name = res.data[i].last_name;\n                w_email = res.data[i].email;\n                localStorage.setItem('w_user_id', w_user_id);\n                localStorage.setItem('w_first_name', w_first_name);\n                localStorage.setItem('w_last_name', w_last_name);\n                localStorage.setItem('w_email', w_email);\n            }\n        }\n    }\n    myFunction();\n    let w_local_user_id = localStorage.getItem('w_user_id');\n    let w_local_first_name = localStorage.getItem('w_first_name');\n    let w_local_last_name = localStorage.getItem('w_last_name');\n    let w_local_email = localStorage.getItem('w_email');\n\n    return {\n        w_id: w_local_user_id,\n        w_first_name: w_local_first_name,\n        w_last_name: w_local_last_name,\n        w_email: w_local_email,\n    }\n}\nexport const job_details = (stxAddress) => {\n    let j_id;\n    let j_pay;\n    let j_check_in;\n    let j_walk;\n    let j_timeframe;\n    let j_location;\n    let j_completed;\n    let j_owner_id;\n    let j_walker_id;\n    let j_animal_id;\n    let j_pet_name;\n    let j_owner_first_name;\n    let j_owner_last_name;\n\n    async function myFunction() {\n        const res = await axios.get(`https://pacific-depths-79804.herokuapp.com/api/jobs`);\n        // Loop through the Jobs DB\n        for (let i = 0; i < res.data.length; i++) {\n            // If an owner_id matches the stxAddress then store that JOB data locally\n            if (JSON.stringify(res.data[i].owner_id) === stxAddress) {\n                console.log(\"JOB #: \", i)\n                j_id = res.data[i].id;\n                j_pay = res.data[i].pay;\n                j_check_in = res.data[i].check_in;\n                j_walk = res.data[i].walk;\n                j_timeframe = res.data[i].timeframe;\n                j_location = res.data[i].location;\n                j_completed = res.data[i].completed;\n                j_owner_id = res.data[i].owner_id;\n                j_walker_id = res.data[i].walker_id;\n                j_animal_id = res.data[i].animal_id;\n                j_pet_name = res.data[i].pet.pet_name;\n                j_owner_first_name = res.data[i].owner.first_name;\n                j_owner_last_name = res.data[i].owner.last_name;\n\n                localStorage.setItem('j_id', j_id);\n                localStorage.setItem('j_pay', j_pay);\n                localStorage.setItem('j_check_in', j_check_in);\n                localStorage.setItem('j_walk', j_walk);\n                localStorage.setItem('j_timeframe', j_timeframe);\n                localStorage.setItem('j_location',  j_location);\n                localStorage.setItem('j_completed', j_completed);\n                localStorage.setItem('j_owner_id', j_owner_id);\n                localStorage.setItem('j_walker_id', j_walker_id);\n                localStorage.setItem('j_animal_id', j_animal_id);\n                localStorage.setItem('j_pet_name', j_pet_name);\n                localStorage.setItem('j_owner_first_name', j_owner_first_name);\n                localStorage.setItem('j_owner_last_name', j_owner_last_name);\n            }\n        }\n    }\n    myFunction();\n    let j_local_id = localStorage.getItem('j_id');\n    let j_local_pay = localStorage.getItem('j_pay');\n    let j_local_check_in = localStorage.getItem('j_check_in');\n    let j_local_walk = localStorage.getItem('j_walk');\n    let j_local_timeframe = localStorage.getItem('j_timeframe');\n    let j_local_location = localStorage.getItem('j_location');\n    let j_local_completed = localStorage.getItem('j_completed');\n    let j_local_owner_id = localStorage.getItem('j_owner_id');\n    let j_local_walker_id = localStorage.getItem('j_walker_id');\n    let j_local_animal_id = localStorage.getItem('j_animal_id');\n    let j_local_pet_name = localStorage.getItem('j_pet_name');\n    let j_local_owner_first_name = localStorage.getItem('j_owner_first_name');\n    let j_local_owner_last_name = localStorage.getItem('j_owner_last_name');\n\n    return {\n        j_id: j_local_id,\n        j_pay: j_local_pay,\n        j_check_in: j_local_check_in,\n        j_walk: j_local_walk,\n        j_timefrime: j_local_timeframe,\n        j_location: j_local_location,\n        j_completed: j_local_completed,\n        j_owner_id: j_local_owner_id,\n        j_walker_id: j_local_walker_id,\n        j_animal_id: j_local_animal_id,\n        j_pet_name: j_local_pet_name,\n        j_owner_first_name: j_local_owner_first_name,\n        j_owner_last_name: j_local_owner_last_name,\n    }\n}","// Primary dependencies\nimport React from \"react\";\nimport Handlebars from 'handlebars';\nimport { getUserData, userSession } from '../../../auth';\nimport { job_details } from '../fetch';\n\n// Pull jobs based on the users stxAddress. This function reviews the /api/jobs DB and searches\n// for an owner_id that equals the users stxAddress (the unique id that corresponds to their Hiro Web Wallet account)\nconst pullJobs = () => {\n    const stxAddress = getUserData().profile.stxAddress.mainnet;\n    const str_stxAddress = JSON.stringify(stxAddress);\n    console.log(job_details(str_stxAddress))\n    return job_details(str_stxAddress);\n}\n\n// Terenary operator: {condition ? expression if TRUE : expression if FALSE}\n// If the user IS NOT signed in then console log \"NOT SIGNED IN!\"\n// If the user IS signed in then run the pullJobs() function\n{!userSession.isUserSignedIn() ? console.log(\"NOT SIGNED IN!!!!\") : pullJobs()}\n\n// Set up the Job Card template\n// const template = Handlebars.registerPartial(\n//     'jobs-card',\n//         `<div class=\"card mb-2\">\n//             <div class=\"card-body\">\n//                 <h4 class=\"card-title\">${pullJobs().j_owner_first_name} ${pullJobs().j_owner_last_name}</h5>\n//                 <h5 class=\"card-text\">Pet: ${pullJobs().j_pet_name}</h5>\n//                 <h5 class=\"card-subtitle\">Visit: {{#if walk }}Walk{{/if}}{{#if check_in }}Check-In{{/if}}</h6>\n//                 <h5 class=\"card-text\">Pay: ${pullJobs().j_pay}</h5>\n//                 <h6 class=\"card-text text-muted\">Time: ${pullJobs().j_timefrime}</h6>\n//                 <h6 class=\"card-text text-muted\">Location: ${pullJobs().j_location}</h6>\n//             </div>\n//         </div>`\n// );\n\nconst template = Handlebars.registerPartial(\n    'jobs-card',\n        `<div class=\"card mb-2\">\n            <div class=\"card-body\">\n                <h4 class=\"card-title\">Placeholder Name</h5>\n                <h5 class=\"card-text\">Pet: Placeholder Pet Name</h5>\n                <h5 class=\"card-subtitle\">Visit: {{#if walk }}Walk{{/if}}{{#if check_in }}Check-In{{/if}}</h6>\n                <h5 class=\"card-text\">Pay: Placeholder Pay</h5>\n                <h6 class=\"card-text text-muted\">Time: Placeholder Time</h6>\n                <h6 class=\"card-text text-muted\">Location: Placeholder location</h6>\n            </div>\n        </div>`\n);\n\n// Export the Job Cards using the template\nexport const Jobscard = () => { \n    return (\n        <div\n            dangerouslySetInnerHTML={{__html: template}}\n        />\n    )\n}","// Primary dependencies\nimport React from \"react\";\nimport Handlebars from 'handlebars';\n\n// Set up the Nav Block template\nconst template = Handlebars.registerPartial(\n    'nav-block',\n    `<div class=\"dropdown\">\n        <button class=\"btn success dropdown-toggle\" type=\"button\" id=\"dropdownMenu2\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Dropdown</button>\n        <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenu2\">\n            <button class=\"dropdown-item\" type=\"button\">Job Search</button>\n            <button class=\"dropdown-item\" type=\"button\">Dashboard</button>\n        </div>\n    </div>`\n);\n\n// Export the Nav Block using the template\nexport const Navblock = () => {\n    return (\n        <div\n            dangerouslySetInnerHTML={{__html: template}}\n        />\n    )\n}","import React from 'react';\nimport Handlebars from 'handlebars';\nconst template = Handlebars.registerPartial(\n    'modal/create-job',\n    `<div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n        <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Create Job</h5>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n        </div>\n        <div class=\"modal-body\">\n        <form class=\"create-job-form\" action=\"\">\n            <div class=\"form-outline\">\n            <input type=\"text\" id=\"price\" name=\"pay\" class=\"form-control\" placeholder=\"price\"/>\n            <label class=\"form-label\" for=\"price\"></label>\n\n            <input class=\"form-control\" type=\"date\" id=\"date-start\" name=\"visit-date\" value=\"\" min=\"2022-01-01\" max=\"2025-12-31\">\n            <label class=\"form-label\" for=\"date-start\"></label>\n\n            <input class=\"form-control\" type=\"time\" id=\"hour-start\" name=\"visit-time\" >\n            <label class=\"form-label\" for=\"hour-start\"></label>\n\n            <input type=\"text\" id=\"location\" name=\"location\" class=\"form-control\" placeholder=\"Enter your zip code\"/>\n            <label class=\"form-label\" for=\"location\"></label>\n\n            <select id=\"visit-type\" name=\"visit-select\" class=\"form-select form-control\" aria-label=\"Default select example\">\n                <option name=\"walk\" value=\"walk\" selected>Walk</option>\n                <option name=\"checkin\" value=\"checkin\">Check-in</option>\n            </select>\n\n            </div>\n            <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n            <button type=\"submit\" class=\"btn btn-primary\">Save changes</button>\n            </div>\n        </form>\n        </div>\n\n    </div>\n    </div>\n    </div>\n\n    <script src=\"/javascript/create-job.js\"></script>\n\n`);\nexport const CreateJob = () => {\n\n    return (\n        <div\n        dangerouslySetInnerHTML={{__html: template}}\n      />\n    );\n};","// Primary dependencies\nimport React from 'react';\nimport Handlebars from 'handlebars';\n\n// Import partials\nimport { Petscard } from './partials/pets-card';\nimport { Jobscard } from './partials/jobs-card';\nimport { Navblock } from './partials/nav-block';\nimport { CreateJob } from './partials/modal/create-job';\n\n// import { owner_fetch } from './fetch-test';\n\n// Set up the Owner Dashboard template\nconst template = Handlebars.compile(`\n    {{> nav-block}}\n\n    <div class=\"dashboard-container\">\n        <h1 id=\"your-dashboard\" class=\"text-center\">Your Dashboard</h1>\n        \n        <div id=\"pets-container\" class=\"d-flex flex-column mx-auto\" style=\"width: 92%;\">\n            <h1>Your Pets</h1>\n            <div id=\"pet-cards\" class=\"d-flex flex-row\">\n\n                {{> pets-card ownersPets}}\n\n                <form class=\"create-pet-form card\" style=\"width: 18rem;\">\n                    <div class=\"card-body\">\n                        <h5 class=\"card-title\">Add a Pet</h5>\n                        <div class=\"form-outline\">\n                            <input type=\"text\" name=\"pet-name\" class=\"form-control\" placeholder=\"Pet Name\"/>\n                            <label class=\"form-label\" for=\"fist-name\"></label>\n                        </div>\n                        <div class=\"form-outline\">\n                            <input type=\"text\" name=\"pet-type\" class=\"form-control\" placeholder=\"Breed\"/>\n                            <label class=\"form-label\" for=\"pet-name\"></label>\n                        </div>\n                        <textarea id=\"about-pet-input\" class=\"card-subtitle mb-2 text-muted form-outline\" name=\"about-pet\" placeholder=\"About your pet\"></textarea>\n                    </div>\n                    <div>\n                        <button class=\"float-right mr-3 mb-3 btn success\" type=\"submit\">Confirm</button>\n                    </div>\n                </form>\n\n            </div>  \n        </div>\n        \n        <div id=\"jobs-container\" class=\"d-flex flex-column mx-auto\" style=\"width: 92%;\">\n\n            <div class=\"d-flex flex-row justify-content-between mt-2\">\n                <h1>Job Postings</h2>\n            </div>\n\n            <div class=\"tabbable\">\n                \n                <ul class=\"nav nav-tabs\">\n                    <li class=\"active nav-item\">\n                        <a class=\"nav-link active job-tab current-jobs-tab\" href=\"#tab1\" data-toggle=\"tab\">Current posts</a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link job-tab past-jobs-tab\" href=\"#tab2\" data-toggle=\"tab\">Past posts</a>\n                    </li>\n                </ul>\n\n                <div class=\"tab-content\">\n                    <div class=\"tab-pane active\" id=\"tab1\">\n                        <p>List of current jobs</p>\n                        {{> jobs-card jobs}}\n                    </div>\n                    <div class=\"tab-pane\" id=\"tab2\">\n                        <p>List of past jobs</p>\n                        {{> jobs-card completedJobs }}\n                    </div>\n                </div>\n\n            </div>  \n        </div>     \n    </div>\n\n    <script src=\"/javascript/create-pet.js\"></script>\n    <script src=\"/javascript/create-job.js\"></script>\n\n\n    {{> modal/create-job }}\n`);\n\n// Export the Owner Dashboard using the template and the partials\nexport const Dashboard = () => {  \n    return (\n        <div\n        dangerouslySetInnerHTML={{__html: template(Navblock, Petscard, Jobscard, CreateJob)}}\n      />\n    );\n};\n\n\n","// Primary dependencies\nimport React from 'react';\n\n// Set up the Homepage template\nexport const Homepage = () => {\n    const data = `\n        {{> nav-block}}\n\n        <div id=\"main-container\" class=\"container1\">\n            <div class=\"jumbotron text-center header-wrap\" align=\"center\">\n                <p class=\"lead\">Connect with trusted dog walkers in your neighborhood.</p>\n                <hr style=\"width: 400px;\" class=\"my-4\" >\n                <p style=\"font-size: 1.5rem; width: 400px; margin: auto;\">Sign up bellow to get started as a pet owner or a walker.</p>\n                <section id=\"section-form\" class=\"vh-100 bg-image\">\n                    <div class=\"mask d-flex align-items-center h-100 gradient-custom-3\">\n                        <div class=\"container h-100\">\n                            <div class=\"row d-flex justify-content-center align-items-center h-100\">\n                                <div class=\"col-12\">\n                                    <div class=\"card\" style=\"border-radius: 15px;\">\n                                        <div class=\"card-body p-4\">\n        \n                                            <form class=\"create-account-form\" action=\"\">\n                                                <div class=\"form-outline\">\n        \n                                                    <div class=\"form-outline\">\n                                                    <input type=\"id\" name=\"id\"id=\"id\" class=\"form-control\" placeholder=\"id\"/>\n                                                    <label class=\"form-label\" for=\"id\"></label>\n                                                </div>\n        \n                                                    <input type=\"text\" name=\"first\" id=\"fist-name\" class=\"form-control\" placeholder=\"First Name\"/>\n                                                    <label class=\"form-label\" for=\"fist-name\"></label>\n                                                </div>\n        \n                                                <div class=\"form-outline\">\n                                                    <input type=\"text\" name=\"last\" id=\"last-name\" class=\"form-control\" placeholder=\"Last Name\"/>\n                                                    <label class=\"form-label\" for=\"last-name\"></label>\n                                                </div>\n        \n                                                <div class=\"form-outline\">\n                                                    <input type=\"email\" name=\"email\" id=\"email\" class=\"form-control\" placeholder=\"Your Email\"/>\n                                                    <label class=\"form-label\" for=\"email\"></label>\n                                                </div>\n        \n                                                <div class=\"form-outline\">\n                                                    <input type=\"password\" name=\"password\"id=\"password\" class=\"form-control\" placeholder=\"Password\"/>\n                                                    <label class=\"form-label\" for=\"password\"></label>\n                                                </div>\n        \n                                                <div class=\"form-check form-outline mb-2\">\n                                                    <input class=\"form-check-input\" type=\"radio\" name=\"exampleRadios\" id=\"own\" value=\"option1\" checked>\n                                                    <label class=\"form-check-label\" for=\"exampleRadios1\">I'm a pet owner looking for a walker</label>\n                                                </div>\n                                                \n                                                <div class=\"form-check form-outline mb-3\">\n                                                    <input class=\"form-check-input\" type=\"radio\" name=\"exampleRadios\" id=\"walk\" value=\"option2\">\n                                                    <label class=\"form-check-label\" for=\"exampleRadios2\">I'm a walker looking for jobs</label>\n                                                </div>                \n        \n                                                <div class=\"d-flex justify-content-center\">\n                                                    <button type=\"submit\" class=\"btn btn-success btn-block btn-lg gradient-custom-4 text-body\">Submit</button>\n                                                </div>\n                                            </form>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </div>\n        </div>\n        </form>\n        <script src =\"javascript/create-account.js\"></script>\n        <script src =\"javascript/create-owner.js\"></script>\n    `;\n\n    // Return the Homepage template\n    return (\n      <div\n        dangerouslySetInnerHTML={{__html: data}}\n      />\n    );\n};","// Primary dependencies\nimport React from 'react';\nimport Handlebars from 'handlebars';\n\n// Import partials\nimport { Navblock } from './partials/nav-block';\nimport { Jobscard } from './partials/jobs-card';\n\n// Set up the Walker Dashboard template\nconst template = Handlebars.compile(`\n{{> nav-block}}\n\n<div class=\"dashboard-container\">\n    <h1 id=\"your-dashboard\" class=\"text-center\">Walker Dashboard</h1>\n    <div id=\"jobs-container\" class=\"d-flex flex-column mx-auto\" style=\"width: 92%;\">\n        <div class=\"tabbable\">\n            <ul class=\"nav nav-tabs\">\n                <li class=\"active nav-item\">\n                    <a class=\"nav-link active job-tab\" href=\"#tab1\" data-toggle=\"tab\">Current posts</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link job-tab\" href=\"#tab2\" data-toggle=\"tab\">Past posts</a>\n                </li>\n            </ul>\n            <div class=\"tab-content\">\n                <div class=\"tab-pane active\" id=\"tab1\">\n                    <p>List of current posts</p>\n                    {{> jobs-card jobs}}\n                </div>\n                <div class=\"tab-pane\" id=\"tab2\">\n                    <p>List of past jobs</p>\n                    {{> jobs-card walkerJobsCompleted }}\n                </div>\n            </div>\n        </div>  \n    </div>     \n</div>\n\n<script src=\"/javascript/walker-dashboard.js\"></script>\n`);\n\n// Export the Walker Dashboard using the template and the partials\nexport const WalkerDash = () => {\n    return (\n        <div\n        dangerouslySetInnerHTML={{__html: template(Navblock, Jobscard)}}\n      />\n    );\n};","import React from 'react';\nimport { authenticate, disconnect } from '../auth';\nimport { Text } from '@blockstack/ui';\nimport { getUserData } from '../auth';\n\n// Main handlebars HTML template. This is a necessity and it handles page formatting. \nimport { Main } from './handlebars/main';\n\n// Various user pages (Owner / Walker). pets-cards, nav-block, and jobs-card are currently \n// contained within each one of these files as needed. It may be more appropriate\n// to create standalone JS files for re-use. The current set up is NOT DRY.\nimport { Dashboard } from './handlebars/dashboard';\nimport { Homepage } from './handlebars/homepage';\n// import { Jobsearch } from './handlebars/jobsearch';\nimport { WalkerDash } from './handlebars/walker-dashboard';\n\nimport { owner_details, walker_details } from './handlebars/fetch';\nconsole.log('owner: ', owner_details().o_id);\nconsole.log('walker: ', walker_details().w_id);\n\n// Signin function. Based on the App.jsx --> render() terenary operator this\n// is the truthy value and exports on the Homepage. Once the user is logged in, \n// then Signout() exports.\nexport const Signin = () => {\n  console.log(\"Sign in\");\n  return (\n    <div>\n      <div>\n        <div className=\"navbar navbar-expand-sm bg-dark navbar-dark fixed-top\">\n            <a className=\"navbar-brand\" href=\"/\">Scout</a>\n            <ul className=\"nav navbar-nav ml-auto\"></ul>\n          <button type=\"button\" className=\"btn success\" onClick={() => authenticate()}>Login</button>\n        </div>\n      </div>\n      {/* Render Main handlebars HTML and Homepage handlebars HTML pages. */}\n      <Main />\n      <Homepage />\n    </div>\n  );\n};\n\n// Signout function. Based on the App.jsx --> render() terenary operator this\n// is the falsy value and exports once the user logs in. Once the user is logged in, \n// then Signout() exports.\nexport const Signout = () => {\n  console.log(\"Sign out\");\n  const stxAddress = getUserData().profile.stxAddress.mainnet;\n  const str_stxAddress = JSON.stringify(stxAddress);\n  console.log(str_stxAddress);\n  const shortenedStxAddress = stxAddress.substr(0, 4) + \"....\" + stxAddress.substr(stxAddress.length-4, stxAddress.length);\n  return (\n    <div>\n      <div>\n        <div className=\"navbar navbar-expand-sm bg-dark navbar-dark fixed-top\">\n          <a className=\"navbar-brand\" href=\"/\">Scout</a>\n          <ul className=\"nav navbar-nav ml-auto\"></ul>\n          <Text margin=\"10px\" color= \"#55C35E\" fontWeight=\"500\">{shortenedStxAddress} </Text>\n          <button type=\"button\" className=\"btn success\" onClick={() => disconnect()}>Logout</button>\n        </div>\n      </div>\n      {/* Render the Main handlebars HTML page. */}\n      <Main /> \n      {/* The following terenary operators will execute in sequence. */}\n      {/* If you find the key in the Owners Table then render the Owner Dashboard.  */}\n      {stxAddress === owner_details(str_stxAddress).o_id ? <Dashboard /> : console.log(\"This account is not registered as an Owner.\")}\n      {/* If you find the key in the Walker Table then render the Walker Dashboard.  */}\n      {stxAddress === walker_details(str_stxAddress).w_id ? <WalkerDash /> : console.log(\"This account is not registered as a Walker.\")}\n    </div>\n    \n  );\n};","// Primary dependencies\nimport React, { Component } from 'react';\nimport { Signin, Signout } from './Signin';\nimport { userSession } from '../auth';\n\n// Export the 'App' class to /src/index.js\nexport default class App extends Component {\n  state = {\n    userData: null,\n  };\n\n  handleSignOut(e) {\n    e.preventDefault();\n    this.setState({ userData: null });\n    userSession.signUserOut(window.location.origin);\n  }\n\n  componentDidMount() {\n    if (userSession.isSignInPending()) {\n      userSession.handlePendingSignIn().then(userData => {\n        window.history.replaceState({}, document.title, '/');\n        this.setState({ userData: userData });\n      });\n    } else if (userSession.isUserSignedIn()) {\n      this.setState({ userData: userSession.loadUserData() });\n    }\n  }\n\n  // Render the Login or Logout button depending on the user session i.e. is the user signed in or not?\n  render() {\n    return (\n      <div>\n          {!userSession.isUserSignedIn() ? <Signin /> : <Signout/>}\n      </div>\n    );\n  }\n}\n","// Primary dependencies\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App';\n\n// Render /src/components/App.jsx content on the /public/index.html <div id=\"app\"></div>\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('app')\n);\n"],"sourceRoot":""}